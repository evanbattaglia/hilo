#!/usr/bin/env ruby
# encoding: UTF-8
require_relative '../hilo'

#TODO: share these groupers with hilo-surfaces

GROUPERS = {
  :simple => lambda do |s|
    s[0]
  end,
  :smart => lambda do |s|
    conversions = {"RE" => "RC","HF" => "HGG","HG" => "HGG","RCE" => "RC","RB" => "RA","RAB" => "RA","RF" => "RC","HFG" => "HGG","HB" => "H","HC" => "H","RG" => "T","TF" => "HGG","TGG" => "HGG","IG" => "T","HEF" => "HGG","HE" => "H",
                   "á¹–" => "H",
    "REF" => "RC",  "MF" => "M",    "TE" => "T",    "RFG" => "RT",    "TG" => "T",    "ME" => "M",    "IFG" => "M",    "MC" => "M",    "I" => "T", # ACTUALLY maybe "H"
    "MG" => "M"
    }
    conversions[s] || s
  end,
  :roadortrail => lambda do |s|
    conversions = {
      'RA' => 'RA',
      'RC' => 'RA',
      'H' => 'H',
      'HGG' => 'H',
      'M' => 'H',
      'X' => 'H',
      'T' => 'H'
    }
    conversions[GROUPERS[:smart][s]] || s
  end,
  :xcty => lambda do |s|
    conversions = {
      'RA' => 'RA',
      'RC' => 'RA',
      'H' => 'RA',
      'M' => 'RA',
      'T' => 'RA',
      'X' => 'X',
      'HGG' => 'X'
    }
    conversions[s] || conversions[GROUPERS[:smart][s]] || s
  end,
  :identity => lambda{|s| s}
}

textmode = ARGV.delete('--text')

grouper = if ARGV.delete("--simple")
            :simple
          elsif ARGV.delete("--smart")
            :smart
          elsif ARGV.delete("--roadortrail")
            :roadortrail
          elsif ARGV.delete("--xcty")
            :xcty
          else
            :identity
          end
grouper = GROUPERS[grouper]

###################

COLORS = {
  "H" => "#2c7206",
  "HGG" => "#116a56",
  "X" => "#112d6a",
  "T" => "#a95f00",
  "M" => "#c3c116",
  "RC" => "#a90000",
  "RA" => "#c90193",
}

if textmode
  Hilo.new(ARGV[0]).ranges(:rsurface).each do |range|
    puts "#{grouper[range.value]},#{range.start_km},#{range.stop_km}"
  end
else
  print "<html><body>\n"
  Hilo.new(ARGV[0]).ranges(:rsurface).each do |range|
    x = (range.start_km*2).to_i
    width = (range.stop_km*2).to_i - (range.start_km*2).to_i

    style = "position: absolute; height: 30px; top: 10; left: #{x}; width: #{width}; background-color: #{COLORS[grouper[range.value]]}"
    print "<div style=\"#{style}\"> </div>\n"
  end
  print "</body></html>\n"
end
