#!/usr/bin/env ruby
require_relative '../hilo'

GROUPERS = {
  :simple => lambda do |s|
    s[0]
  end,
  :smart => lambda do |s|
    conversions = {"RE" => "RC","HF" => "HGG","HG" => "HGG","RCE" => "RC","RB" => "RA","RAB" => "RA","RF" => "RC","HFG" => "HGG","HB" => "H","HC" => "H","RG" => "T","TF" => "HGG","TGG" => "HGG","IG" => "T","HEF" => "HGG","HE" => "H"}
    conversions[s] || s
  end,
  :identity => lambda{|s| s}
}

grouper = if ARGV.delete("--simple")
            :simple
          elsif ARGV.delete("--smart")
            :smart
          else
            :identity
          end
grouper = GROUPERS[grouper]

surfaces = Hilo.new(ARGV[0]).ranges(:rsurface).each_with_object(Hash.new(0)) do |range, surfaces|
  surfaces[grouper[range.value]] += range.length
end

surfaces.each do |surface, value|
  print "%9.2f, %s\n" % [value, surface]
end
